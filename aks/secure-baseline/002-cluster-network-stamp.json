{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.1",
    "parameters": {
        "location": {
            "type": "string",
            "allowedValues": [
                "centralus",
                "eastus",
                "eastus2",
                "westus2",
                "francecentral",
                "northeurope",
                "uksouth",
                "westeurope",
                "japaneast",
                "southeastasia"
            ],
            "metadata": {
                "description": "The location in which the resources should be deployed."
            }
        },
        "orgAppId": {
            "type": "string",
            "defaultValue": "BU0001A0008"
        },
        "networkSuffix": {
            "type": "string",
            "defaultValue": "-00"
        },
        "hubLaResourceId": {
            "type": "string"
        },
        "hubVnetId": {
            "type": "string"
        },
        "firewallName": {
            "type": "string"
        }
    },
    "variables": {
        "clusterRegion": "[parameters('location')]",
        "clusterVNetName": "[concat('vnet-hub-spoke-', parameters('orgAppId'), parameters('networkSuffix'))]",
        "vnetAddressSpace": "10.240.0.0/19",
        "vnetNodepoolSubnetName": "snet-system-clusternodes",
        "vnetNodepoolSubnetAddressSpace": "10.240.16.0/24",
        "vnetUserNodepoolSubnetName": "snet-user-clusternodes",
        "vnetUserNodepoolSubnetAddressSpace": "10.240.0.0/20",
        "vnetIngressSubnetName": "snet-clusteringressservices",
        "vnetIngressSubnetAddressSpace": "10.240.17.0/24",
        "vnetGatewaySubnetName": "snet-applicationgateways",
        "vnetGatewaySubnetAddressSpace": "10.240.18.0/28",
        "routeTableName": "[concat('route-', variables('clusterVNetName'), '-clusternodes-to-hub')]",
        "hubRgName": "[split(parameters('hubVnetId'),'/')[4]]",
        "hubNetworkName": "[split(parameters('hubVnetId'),'/')[8]]",
        "appGatewayPipName": "[concat('pip-', parameters('orgAppId'), parameters('networkSuffix'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2019-11-01",
            "location": "[variables('clusterRegion')]",
            "name": "[variables('routeTableName')]",
            "properties": {
                "routes": [
                    {
                        "name": "r-nexthop-to-fw",
                        "properties": {
                            "nextHopType": "VirtualAppliance",
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopIpAddress": "[reference(resourceId(variables('hubRgName'), 'Microsoft.Network/azureFirewalls', parameters('firewallName')), '2019-11-01', 'Full').properties.ipConfigurations[0].properties.privateIpAddress]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[variables('clusterVNetName')]",
            "location": "[variables('clusterRegion')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressSpace')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnetNodepoolSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('vnetNodepoolSubnetAddressSpace')]",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.ContainerRegistry"
                                },
                                {
                                    "service": "Microsoft.KeyVault"
                                }
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vnetUserNodepoolSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('vnetUserNodepoolSubnetAddressSpace')]",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.ContainerRegistry"
                                },
                                {
                                    "service": "Microsoft.KeyVault"
                                }
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('vnetIngressSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('vnetIngressSubnetAddressSpace')]",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault"
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('vnetGatewaySubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('vnetGatewaySubnetAddressSpace')]",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault"
                                }
                            ]
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
            "resources": [
                {
                    "type": "virtualNetworkPeerings",
                    "apiVersion": "2019-11-01",
                    "name": "[concat('spoke-to-', variables('hubNetworkName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                    ],
                    "properties": {
                        "remoteVirtualNetwork": {
                            "id": "[parameters('hubVnetId')]"
                        },
                        "allowForwardedTraffic": true,
                        "allowVirtualNetworkAccess": true,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(variables('clusterVNetName'), '/Microsoft.Insights/toHub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
            ],
            "properties": {
                "workspaceId": "[parameters('hubLaResourceId')]",
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat('CreateHubToSpokePeer')]",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[variables('hubRgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                            "apiVersion": "2019-11-01",
                            "name": "[concat(variables('hubNetworkName'), '/hub-to-', variables('clusterVNetName'))]",
                            "location": "[variables('clusterRegion')]",
                            "properties": {
                                "remoteVirtualNetwork": {
                                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]"
                                },
                                "allowForwardedTraffic": false,
                                "allowGatewayTransit": false,
                                "allowVirtualNetworkAccess": true,
                                "useRemoteGateways": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[variables('appGatewayPipName')]",
            "location": "[variables('clusterRegion')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "publicIPAddressVersion": "IPv4"
            }
        }
    ],
    "outputs": {
        "targetVnetResourceId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
            "type": "string"
        },
        "vnetNodepoolSubnetName": {
            "value": "[variables('vnetNodepoolSubnetName')]",
            "type": "string"
        },
        "vnetNodepoolSubnetNameResourceId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('clusterVNetName'), variables('vnetNodepoolSubnetName'))]",
            "type": "string"
        }
    }
}
